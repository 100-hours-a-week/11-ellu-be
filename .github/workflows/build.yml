name: Docker Image For Development
on: 
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: 100-hours-a-week/11-ellu-be
  VERSION: latest
jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Build without tests
        run: |
          chmod +x gradlew
          ./gradlew :spotlessApply
          ./gradlew build -x test

  package:
    name: Package and Publish
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: [ build ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Build container image
        run: |
          chmod +x gradlew 
          ./gradlew bootBuildImage --imageName ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Anchore Container Scan
        uses: anchore/scan-action@v6.2.0
        id: scan
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
          output-format: sarif

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3 
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Log into container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish container image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        